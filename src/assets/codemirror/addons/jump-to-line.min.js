// CodeMirror Jump to Line addon - Placeholder
(function(mod) {
  if (typeof exports == "object" && typeof module == "object") // CommonJS
    mod(require("../../lib/codemirror"));
  else if (typeof define == "function" && define.amd) // AMD
    define(["../../lib/codemirror"], mod);
  else // Plain browser env
    mod(CodeMirror);
})(function(CodeMirror) {
  "use strict";
  
  function dialog(cm, text, shortText, deflt, f) {
    if (cm.openDialog) cm.openDialog(text, f, {value: deflt, selectValueOnOpen: true});
    else f(prompt(shortText, deflt));
  }
  
  function interpretLine(cm, string) {
    var num = Number(string);
    if (/^[-+]/.test(string)) return cm.getCursor().line + num;
    else return num - 1;
  }
  
  CodeMirror.commands.jumpToLine = function(cm) {
    var cur = cm.getCursor();
    dialog(cm, "Jump to line:", "Jump to line:", (cur.line + 1) + ":" + cur.ch, function(posStr) {
      if (!posStr) return;
      var match;
      if (match = /^([+-]?\d+)(:(\d+))?$/.exec(posStr)) {
        var line = interpretLine(cm, match[1]), ch = match[3] ? Number(match[3]) : cur.ch;
        cm.setCursor(Math.max(0, Math.min(cm.lastLine(), line)), Math.max(0, ch));
      }
    });
  };
  
  CodeMirror.keyMap["default"]["Alt-G"] = "jumpToLine";
});
