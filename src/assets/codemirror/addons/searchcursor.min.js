// CodeMirror Search Cursor addon - Placeholder
(function(mod) {
  if (typeof exports == "object" && typeof module == "object") // CommonJS
    mod(require("../../lib/codemirror"));
  else if (typeof define == "function" && define.amd) // AMD
    define(["../../lib/codemirror"], mod);
  else // Plain browser env
    mod(CodeMirror);
})(function(CodeMirror) {
  "use strict";
  
  // Placeholder SearchCursor implementation
  var SearchCursor = CodeMirror.SearchCursor = function(doc, query, pos, options) {
    this.atOccurrence = false;
    this.doc = doc;
    pos = pos ? doc.clipPos(pos) : {line: 0, ch: 0};
    this.pos = {from: pos, to: pos};
    
    var caseFold;
    if (typeof query == "string") {
      caseFold = false;
    } else {
      query = new RegExp(query.source, query.ignoreCase ? "ig" : "g");
      caseFold = query.ignoreCase;
    }
    if (typeof query == "string" ? query == "" : query.test(""))
      query = /x^/;
    this.matches = function(reverse, pos) {
      return [];
    };
  };
  
  SearchCursor.prototype = {
    findNext: function() {return this.find(false);},
    findPrevious: function() {return this.find(true);},
    find: function(reverse) {
      return false;
    },
    from: function() {return this.pos.from;},
    to: function() {return this.pos.to;},
    replace: function(newText, origin) {}
  };
});
